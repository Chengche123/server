// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: recommend.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Buvid   string `protobuf:"bytes,2,opt,name=buvid,proto3" json:"buvid,omitempty"`                     // 设备id
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                    // 响应数量
	Offset  int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                  // 第几页
	ComicId int64  `protobuf:"varint,5,opt,name=comic_id,json=comicId,proto3" json:"comic_id,omitempty"` // 漫画id
	QueryId string `protobuf:"bytes,6,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`  // 表示此次请求
	// 以下字段暂时没卵用
	AbTest     string `protobuf:"bytes,7,opt,name=ab_test,json=abTest,proto3" json:"ab_test,omitempty"`              // ab测试
	TraceId    string `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`           // 服务追踪和监控
	DebugFlag  bool   `protobuf:"varint,9,opt,name=debug_flag,json=debugFlag,proto3" json:"debug_flag,omitempty"`    // debug控制
	DebugType  string `protobuf:"bytes,10,opt,name=debug_type,json=debugType,proto3" json:"debug_type,omitempty"`    // debug类型
	App        string `protobuf:"bytes,11,opt,name=app,proto3" json:"app,omitempty"`                                 // 所用app
	AppVersion string `protobuf:"bytes,12,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // app版本
}

func (x *RecReq) Reset() {
	*x = RecReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recommend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecReq) ProtoMessage() {}

func (x *RecReq) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecReq.ProtoReflect.Descriptor instead.
func (*RecReq) Descriptor() ([]byte, []int) {
	return file_recommend_proto_rawDescGZIP(), []int{0}
}

func (x *RecReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RecReq) GetBuvid() string {
	if x != nil {
		return x.Buvid
	}
	return ""
}

func (x *RecReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RecReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RecReq) GetComicId() int64 {
	if x != nil {
		return x.ComicId
	}
	return 0
}

func (x *RecReq) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *RecReq) GetAbTest() string {
	if x != nil {
		return x.AbTest
	}
	return ""
}

func (x *RecReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RecReq) GetDebugFlag() bool {
	if x != nil {
		return x.DebugFlag
	}
	return false
}

func (x *RecReq) GetDebugType() string {
	if x != nil {
		return x.DebugType
	}
	return ""
}

func (x *RecReq) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *RecReq) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

type RecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*RecRecord      `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RecResponse) Reset() {
	*x = RecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recommend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecResponse) ProtoMessage() {}

func (x *RecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecResponse.ProtoReflect.Descriptor instead.
func (*RecResponse) Descriptor() ([]byte, []int) {
	return file_recommend_proto_rawDescGZIP(), []int{1}
}

func (x *RecResponse) GetList() []*RecRecord {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RecResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RecRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComicId  int64             `protobuf:"varint,1,opt,name=comic_id,json=comicId,proto3" json:"comic_id,omitempty"`
	Score    float64           `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"` // 权重
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RecRecord) Reset() {
	*x = RecRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recommend_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecRecord) ProtoMessage() {}

func (x *RecRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recommend_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecRecord.ProtoReflect.Descriptor instead.
func (*RecRecord) Descriptor() ([]byte, []int) {
	return file_recommend_proto_rawDescGZIP(), []int{2}
}

func (x *RecRecord) GetComicId() int64 {
	if x != nil {
		return x.ComicId
	}
	return 0
}

func (x *RecRecord) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RecRecord) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_recommend_proto protoreflect.FileDescriptor

var file_recommend_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x22,
	0xb9, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x75, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x75, 0x76,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x62, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x62, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x0b,
	0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbc, 0x01, 0x0a, 0x09, 0x52,
	0x65, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xc1, 0x01, 0x0a, 0x0a, 0x52, 0x65,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x52, 0x65, 0x63, 0x12,
	0x14, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x12, 0x14,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x12, 0x14, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recommend_proto_rawDescOnce sync.Once
	file_recommend_proto_rawDescData = file_recommend_proto_rawDesc
)

func file_recommend_proto_rawDescGZIP() []byte {
	file_recommend_proto_rawDescOnce.Do(func() {
		file_recommend_proto_rawDescData = protoimpl.X.CompressGZIP(file_recommend_proto_rawDescData)
	})
	return file_recommend_proto_rawDescData
}

var file_recommend_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_recommend_proto_goTypes = []interface{}{
	(*RecReq)(nil),      // 0: recommend.v1.RecReq
	(*RecResponse)(nil), // 1: recommend.v1.RecResponse
	(*RecRecord)(nil),   // 2: recommend.v1.RecRecord
	nil,                 // 3: recommend.v1.RecResponse.MetadataEntry
	nil,                 // 4: recommend.v1.RecRecord.MetadataEntry
}
var file_recommend_proto_depIdxs = []int32{
	2, // 0: recommend.v1.RecResponse.list:type_name -> recommend.v1.RecRecord
	3, // 1: recommend.v1.RecResponse.metadata:type_name -> recommend.v1.RecResponse.MetadataEntry
	4, // 2: recommend.v1.RecRecord.metadata:type_name -> recommend.v1.RecRecord.MetadataEntry
	0, // 3: recommend.v1.RecService.Rec:input_type -> recommend.v1.RecReq
	0, // 4: recommend.v1.RecService.RelatedRec:input_type -> recommend.v1.RecReq
	0, // 5: recommend.v1.RecService.AuthorRec:input_type -> recommend.v1.RecReq
	1, // 6: recommend.v1.RecService.Rec:output_type -> recommend.v1.RecResponse
	1, // 7: recommend.v1.RecService.RelatedRec:output_type -> recommend.v1.RecResponse
	1, // 8: recommend.v1.RecService.AuthorRec:output_type -> recommend.v1.RecResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_recommend_proto_init() }
func file_recommend_proto_init() {
	if File_recommend_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recommend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recommend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recommend_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recommend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recommend_proto_goTypes,
		DependencyIndexes: file_recommend_proto_depIdxs,
		MessageInfos:      file_recommend_proto_msgTypes,
	}.Build()
	File_recommend_proto = out.File
	file_recommend_proto_rawDesc = nil
	file_recommend_proto_goTypes = nil
	file_recommend_proto_depIdxs = nil
}
